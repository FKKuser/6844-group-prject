// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RestaurantAdminProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250314010624_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            Name = "Burger",
                            Price = 5.99m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Category = 1,
                            Name = "Fries",
                            Price = 2.99m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Category = 3,
                            Name = "Coke",
                            Price = 1.99m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("SetMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SetMeals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Combo Meal",
                            Price = 8.99m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("SetMealMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetMealId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("SetMealId");

                    b.ToTable("SetMealMenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuItemId = 1,
                            SetMealId = 1
                        },
                        new
                        {
                            Id = 2,
                            MenuItemId = 2,
                            SetMealId = 1
                        });
                });

            modelBuilder.Entity("Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yuan",
                            Position = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mike",
                            Position = "Chef"
                        });
                });

            modelBuilder.Entity("SetMealMenuItem", b =>
                {
                    b.HasOne("MenuItem", "MenuItem")
                        .WithMany("SetMealMenuItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SetMeal", "SetMeal")
                        .WithMany("SetMealMenuItems")
                        .HasForeignKey("SetMealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("SetMeal");
                });

            modelBuilder.Entity("MenuItem", b =>
                {
                    b.Navigation("SetMealMenuItems");
                });

            modelBuilder.Entity("SetMeal", b =>
                {
                    b.Navigation("SetMealMenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
